name: release
on: 
  push:
    tags:
      - 'v[0-9]+.*'
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Extract Tag Version
        id: tag
        run: echo "::set-output name=version::$(echo ${{ github.ref }} | sed -e 's/^refs\/tags\///')"
      -
        name: Output File Name
        id: filename
        run: echo "::set-output name=vsix::freestylewiki-extension_$(echo ${{ steps.tag.outputs.version }} | sed -e 's/^v//').vsix"
      -
        name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - 
        run: npm install
      -
        run: npm run lint
      - 
        name: Copy wasm_exec.js
        if: matrix.os != 'windows-latest'
        run: cp $(go env GOROOT)/misc/wasm/wasm_exec.js ./src
      - 
        name: Copy wasm_exec.js (Windows)
        if: matrix.os == 'windows-latest'
        run: $src=[string]::Format('{0}\misc\wasm\wasm_exec.js', (go env GOROOT)); cp -Path $src -Destination .\src
      -
        name: Build Wasm file
        run: |
          go build -o ../../static/wasm.wasm
        working-directory: ./lib/wasm
        env:
          GOOS: js
          GOARCH: wasm
      - 
        run: npm run compile
      - 
        name: Create .vsce Package
        run: npx vsce package -o ${{ steps.filename.outputs.vsix }}
      - 
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      -
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.filename.outputs.vsix }}
          asset_name: ${{ steps.filename.outputs.vsix }}
          asset_content_type: application/vsix
